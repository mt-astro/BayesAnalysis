# a) make samples
set.seed(123)
Nsample = 2000
a = 2
b = 3
samples = rbeta(Nsample, a, b)
#b) find samples between 0.5 and 0.75
idx0 = samples > 0.5
idx1 = samples > 0.5 & samples < 0.75
# a) make samples
set.seed(123)
Nsample = 2000
a = 2
b = 3
samples = rbeta(Nsample, a, b)
#b) find samples between 0.5 and 0.75
idx0 = samples > 0.5
idx1 = samples > 0.5 & samples < 0.75
frac = length(idx1) / length(idx0)
print(frac)
# a) make samples
set.seed(123)
Nsample = 2000
a = 2
b = 3
samples = rbeta(Nsample, a, b)
#b) find samples between 0.5 and 0.75
idx0 = samples > 0.5
idx1 = samples > 0.5 & samples < 0.75
frac = length(idx1) / length(idx0)
print(idx0)
# a) make samples
set.seed(123)
Nsample = 2000
a = 2
b = 3
samples = rbeta(Nsample, a, b)
#b) find samples between 0.5 and 0.75
idx0 = samples > 0.5
idx1 = samples > 0.5 & samples < 0.75
frac = sum(idx1) / sum(idx0)
print(idx0)
# a) make samples
set.seed(123)
Nsample = 2000
a = 2
b = 3
samples = rbeta(Nsample, a, b)
#b) find samples between 0.5 and 0.75
idx0 = samples > 0.5
idx1 = samples > 0.5 & samples < 0.75
frac = sum(idx1) / sum(idx0)
print(frac)
?pbeta
??pbeta
pbeta(0.1, 2, 3)
pbeta(0.5, 2, 3)
pbeta(0.7, 2, 3)
pbeta(1, 2, 3)
pbeta(0.999, 2, 3)
# a) make samples
set.seed(123)
Nsample = 2000
a = 2
b = 3
samples = rbeta(Nsample, a, b)
#b) find samples between 0.5 and 0.75
idx0 = samples > 0.5
idx1 = samples > 0.5 & samples < 0.75
frac = sum(idx1) / sum(idx0)
#c) check against pbeta
# i think pbeta returns cdf up until x
gt_half = 1.0 - pbeta(0.5, a, b)
lt_3quart = pbeta(0.75, a, b)
print(gt_half)
print(lt_3quart)
# a) make samples
set.seed(123)
Nsample = 2000
a = 2
b = 3
samples = rbeta(Nsample, a, b)
#b) find samples between 0.5 and 0.75
idx0 = samples > 0.5
idx1 = samples > 0.5 & samples < 0.75
frac = sum(idx1) / sum(idx0)
print(frac)
#c) check against pbeta
# i think pbeta returns cdf up until x
gt_half = 1.0 - pbeta(0.5, a, b)
lt_3quart = pbeta(0.75, a, b)
print(gt_half)
print(lt_3quart)
# a) make samples
set.seed(123)
Nsample = 2000
a = 2
b = 3
samples = rbeta(Nsample, a, b)
#b) find samples between 0.5 and 0.75
idx0 = samples > 0.5
idx1 = samples > 0.5 & samples < 0.75
frac = sum(idx1) / sum(idx0)
print(frac)
#c) check against pbeta
# i think pbeta returns cdf up until x
half = pbeta(0.5, a, b)
lt_3quart = pbeta(0.75, a, b)
print(half)
print(lt_3quart)
# a) make samples
set.seed(123)
Nsample = 2000
a = 2
b = 3
samples = rbeta(Nsample, a, b)
#b) find samples between 0.5 and 0.75
idx0 = samples > 0.5
idx1 = samples > 0.5 & samples < 0.75
frac = sum(idx1) / sum(idx0)
print(frac)
#c) check against pbeta
# i think pbeta returns cdf up until x
half = pbeta(0.5, a, b)
lt_3quart = pbeta(0.75, a, b)
print(half)
print(half/lt_3quart)
# a) make samples
set.seed(123)
Nsample = 2000
a = 2
b = 3
samples = rbeta(Nsample, a, b)
#b) find samples between 0.5 and 0.75
idx0 = samples > 0.5
idx1 = samples > 0.5 & samples < 0.75
frac = sum(idx1) / sum(idx0)
print(frac)
#c) check against pbeta
# i think pbeta returns cdf up until x
half = pbeta(0.5, a, b)
lt_3quart = pbeta(0.75, a, b)
print(half)
print(lt_3quart)
# a) make samples
set.seed(123)
Nsample = 2000
a = 2
b = 3
samples = rbeta(Nsample, a, b)
#b) find samples between 0.5 and 0.75
idx0 = samples > 0.5
idx1 = samples > 0.5 & samples < 0.75
frac = sum(idx1) / sum(idx0)
print(frac)
#c) check against pbeta
# i think pbeta returns cdf up until x
half = pbeta(0.5, a, b)
lt_3quart = pbeta(0.75, a, b)
print(half)
print(lt_3quart)
print(lt_3quart - half)
# a) make samples
set.seed(123)
Nsample = 2000
a = 2
b = 3
samples = rbeta(Nsample, a, b)
#b) find samples between 0.5 and 0.75
idx0 = samples > 0.5
idx1 = samples > 0.5 & samples < 0.75
frac = sum(idx1) / sum(idx0)
print(frac)
#c) check against pbeta
# i think pbeta returns cdf up until x
half = pbeta(0.5, a, b)
lt_3quart = pbeta(0.75, a, b)
print(half)
print(lt_3quart)
print(1 - 0.262/0.949)
# a) make samples
set.seed(123)
Nsample = 2000
a = 2
b = 3
samples = rbeta(Nsample, a, b)
#b) find samples between 0.5 and 0.75
idx0 = samples > 0.5
idx1 = samples > 0.5 & samples < 0.75
frac = sum(idx1) / sum(idx0)
print(frac)
#c) check against pbeta
# i think pbeta returns cdf up until x
half = pbeta(0.5, a, b)
lt_3quart = pbeta(0.75, a, b)
print(1-half)
print(lt_3quart)
print(1 - 0.262/0.949)
# a) make samples
set.seed(123)
Nsample = 2000
a = 2
b = 3
samples = rbeta(Nsample, a, b)
#b) find samples between 0.5 and 0.75
idx0 = samples > 0.5
idx1 = samples > 0.5 & samples < 0.75
frac = sum(idx1) / sum(idx0)
print(frac)
#c) check against pbeta
# i think pbeta returns cdf up until x
half = pbeta(seq(0, 0.5, by=0.01)), a, b)
# a) make samples
set.seed(123)
Nsample = 2000
a = 2
b = 3
samples = rbeta(Nsample, a, b)
#b) find samples between 0.5 and 0.75
idx0 = samples > 0.5
idx1 = samples > 0.5 & samples < 0.75
frac = sum(idx1) / sum(idx0)
print(frac)
#c) check against pbeta
# i think pbeta returns cdf up until x
half = pbeta(seq(0, 0.5, by=0.01), a, b)
lt_3quart = pbeta(0.75, a, b)
print(1-half)
print(lt_3quart)
print(1 - 0.262/0.949)
# a) make samples
set.seed(123)
Nsample = 2000
a = 2
b = 3
samples = rbeta(Nsample, a, b)
#b) find samples between 0.5 and 0.75
idx0 = samples > 0.5
idx1 = samples > 0.5 & samples < 0.75
frac = sum(idx1) / sum(idx0)
print(frac)
#c) check against pbeta
# i think pbeta returns cdf up until x
x = seq(0, 1, by=0.001)
psamp = pbeta(x, a, b)
idx0 = x > 0.5
idx1 = x>0.5 & x < 0.75
pfrac = sum(psamp[idx1]) / sum(psamp[idx0])
print(pfrac)
# a) make samples
set.seed(123)
Nsample = 2000
a = 2
b = 3
samples = rbeta(Nsample, a, b)
#b) find samples between 0.5 and 0.75
idx0 = samples > 0.5
idx1 = samples > 0.5 & samples < 0.75
frac = sum(samples[idx1]) / sum(samples[idx0])
print(frac)
#c) check against pbeta
# i think pbeta returns cdf up until x
x = seq(0, 1, by=0.001)
psamp = pbeta(x, a, b)
idx0 = x > 0.5
idx1 = x>0.5 & x < 0.75
pfrac = sum(psamp[idx1]) / sum(psamp[idx0])
print(pfrac)
# a) make samples
set.seed(123)
Nsample = 2000
a = 2
b = 3
samples = rbeta(Nsample, a, b)
#b) find samples between 0.5 and 0.75
idx0 = samples > 0.5
idx1 = samples > 0.5 & samples < 0.75
frac = sum(samples[idx1]) / sum(samples[idx0])
print(frac)
#c) check against pbeta
# i think pbeta returns cdf up until x
gt_05 = 1.0 - pbeta(0.5, a, b)
lt_75 = pbeta(0.75, a, b)
print(gt_05)
print(lt_75)
# a) make samples
set.seed(123)
Nsample = 2000
a = 2
b = 3
samples = rbeta(Nsample, a, b)
#b) find samples between 0.5 and 0.75
idx0 = samples > 0.5
idx1 = samples > 0.5 & samples < 0.75
frac = sum(samples[idx1]) / sum(samples[idx0])
print(frac)
#c) check against pbeta
# i think pbeta returns cdf up until x
gt_05 = 1.0 - pbeta(0.5, a, b)
lt_75 = pbeta(0.75, a, b)
print(gt_05)
print(lt_75)
print(gt_05/lt_75)
# a) make samples
set.seed(123)
Nsample = 2000
a = 2
b = 3
samples = rbeta(Nsample, a, b)
#b) find samples between 0.5 and 0.75
idx0 = samples > 0.5
idx1 = samples > 0.5 & samples < 0.75
frac = sum(samples[idx1]) / sum(samples[idx0])
print(frac)
#c) check against pbeta
# i think pbeta returns cdf up until x
gt_05 = 1.0 - pbeta(0.5, a, b)
lt_75 = pbeta(0.75, a, b)
print(gt_05)
print(lt_75)
print(1.0 - gt_05/lt_75)
# a) make samples
set.seed(123)
Nsample = 2000
a = 2
b = 3
samples = rbeta(Nsample, a, b)
#b) find samples between 0.5 and 0.75
idx0 = samples > 0.5
idx1 = samples > 0.5 & samples < 0.75
frac = sum(samples[idx1]) / sum(samples[idx0])
print(frac)
#c) check against pbeta
# i think pbeta returns cdf up until x
gt_05 = 1.0 - pbeta(0.5, a, b)
lt_75 = pbeta(0.75, a, b)
print(gt_05)
print(lt_75)
print(gt_05 - lt_75)
# a) make samples
set.seed(123)
Nsample = 2000
a = 2
b = 3
samples = rbeta(Nsample, a, b)
#b) find samples between 0.5 and 0.75
idx0 = samples > 0.5
idx1 = samples > 0.5 & samples < 0.75
frac = sum(samples[idx1]) / sum(samples[idx0])
print(frac)
#c) check against pbeta
# i think pbeta returns cdf up until x
gt_05 = 1.0 - pbeta(0.5, a, b)
lt_75 = pbeta(0.75, a, b)
print(gt_05)
print(lt_75)
print(gt_05 - lt_75 + 1)
# a) make samples
set.seed(123)
Nsample = 2000
a = 2
b = 3
samples = rbeta(Nsample, a, b)
#b) find samples between 0.5 and 0.75
idx0 = samples > 0.5
idx1 = samples > 0.5 & samples < 0.75
frac = sum(samples[idx1]) / sum(samples[idx0])
print(frac)
#c) check against pbeta
# i think pbeta returns cdf up until x
gt_05 = 1.0 - pbeta(0.5, a, b)
lt_75 = pbeta(0.75, a, b)
print(gt_05)
print(lt_75)
print(gt_05 - lt_75 + 1)
print(1 - 0.777)
?pbeta
# a) make samples
set.seed(123)
Nsample = 2000
a = 2
b = 3
samples = rbeta(Nsample, a, b)
#b) find samples between 0.5 and 0.75
idx0 = samples > 0.5
idx1 = samples > 0.5 & samples < 0.75
frac = sum(samples[idx1]) / sum(samples[idx0])
print(frac)
#c) check against pbeta
# i think pbeta returns cdf up until x
gt_05 = 1.0 - pbeta(0.5, a, b)
lt_75 = pbeta(0.75, a, b)
print(gt_05)
print(lt_75)
(0.949 - 0.312)
(0.949 - 0.312)*0.949
(0.949 - 0.312)*0.949/0.312
(0.949 - 0.312)*0.949/0.7
# a) make samples
set.seed(123)
Nsample = 2000
a = 2
b = 3
samples = rbeta(Nsample, a, b)
#b) find samples between 0.5 and 0.75
idx0 = samples > 0.5
idx1 = samples > 0.5 & samples < 0.75
frac = sum(idx]) / sum(idx0)
# a) make samples
set.seed(123)
Nsample = 2000
a = 2
b = 3
samples = rbeta(Nsample, a, b)
#b) find samples between 0.5 and 0.75
idx0 = samples > 0.5
idx1 = samples > 0.5 & samples < 0.75
frac = sum(idx) / sum(idx0)
# a) make samples
set.seed(123)
Nsample = 2000
a = 2
b = 3
samples = rbeta(Nsample, a, b)
#b) find samples between 0.5 and 0.75
idx0 = samples > 0.5
idx1 = samples > 0.5 & samples < 0.75
frac = sum(idx1) / sum(idx0)
print(frac)
#c) check against pbeta
# i think pbeta returns cdf up until x
gt_05 = 1.0 - pbeta(0.5, a, b)
lt_75 = pbeta(0.75, a, b)
print(gt_05)
print(lt_75)
(0.949 - 0.312)*0.949/0.7
(0.949 - 0.312)*0.949/pbeta(0.5,a,b)
plot(dbeta(seq(0,1,by=0.01), a, b))
plot(pbeta(seq(0,1,by=0.01), a, b))
plot(rbeta(seq(0,1,by=0.01), a, b))
hist(samples, plot = TRUE)
dbeta(1, a, b)
dbeta(0.99, a, b)
?hist
# a) make samples
set.seed(123)
Nsample = 2000
a = 2
b = 3
samples = rbeta(Nsample, a, b)
hist(samples, 25,plot=TRUE)
#b) find samples between 0.5 and 0.75
idx0 = samples > 0.5
idx1 = samples > 0.5 & samples < 0.75
frac = sum(idx1) / sum(idx0)
#c) check against pbeta
# i think pbeta returns cdf up until x
gt_05 = 1.0 - pbeta(0.5, a, b)
lt_75 = pbeta(0.75, a, b)
# a) make samples
set.seed(123)
Nsample = 2000
a = 2
b = 3
samples = rbeta(Nsample, a, b)
hist(samples, 25,plot=TRUE)
#b) find samples between 0.5 and 0.75
idx0 = samples > 0.5
idx1 = samples > 0.5 & samples < 0.75
frac = sum(idx1) / sum(idx0)
#c) check against pbeta
# i think pbeta returns cdf up until x
gt_05 = 1.0 - pbeta(0.5, a, b)
lt_75 = pbeta(0.75, a, b)
diff = lt_75 - pbeta(0.5, a, b)
print(diff)
# a) make samples
set.seed(123)
Nsample = 2000
a = 2
b = 3
samples = rbeta(Nsample, a, b)
hist(samples, 25,plot=TRUE)
#b) find samples between 0.5 and 0.75
idx0 = samples > 0.5
idx1 = samples > 0.5 & samples < 0.75
frac = sum(idx1) / sum(idx0)
#c) check against pbeta
# i think pbeta returns cdf up until x
gt_05 = 1.0 - pbeta(0.5, a, b)
lt_75 = pbeta(0.75, a, b)
diff = lt_75 - pbeta(0.5, a, b)
print(diff*lt_75/(gt_05))
# a) make samples
set.seed(123)
Nsample = 2000
a = 2
b = 3
samples = rbeta(Nsample, a, b)
hist(samples, 25,plot=TRUE)
#b) find samples between 0.5 and 0.75
idx0 = samples > 0.5
idx1 = samples > 0.5 & samples < 0.75
frac = sum(idx1) / sum(idx0)
#c) check against pbeta
# i think pbeta returns cdf up until x
# via bayes rule, P(A|B) = P(B|A)*P(A)/P(B)
# P(B|A) = P(theta > 0.5 | theta < 0.75) = pbeta(0.75,a,b) - pbeta(0.5,a,b)
cdf5 = 1.0 - pbeta(0.5, a, b) / pbeta(0.75, a, b)
print(cdf5)
# P(A) = P(theta > 0.5) = 1.0 - P(theta < 0.5) = 1-
# P(B) = P(theta < 0.75) = pbeta(0.75, a, b)
