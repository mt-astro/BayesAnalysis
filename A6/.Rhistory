rm(list=ls()) # clean up
library(knitr)
gr <- (1+sqrt(5))/2 # golden ratio, for figures
opts_chunk$set(comment="  ",
collapse=TRUE,
#echo=FALSE,
fig.asp=1/gr,
dev="png",
fig.align="center"
)
options(digits=3)
source("sourceMe_A6.R")
pBetaAB = c(4,4)
data = c(1)
post = BernBeta(pBetaAB, data)
4/7
rm(list=ls()) # clean up
library(knitr)
gr <- (1+sqrt(5))/2 # golden ratio, for figures
opts_chunk$set(comment="  ",
collapse=TRUE,
#echo=FALSE,
fig.asp=1/gr,
dev="png",
fig.align="center"
)
options(digits=3)
source("sourceMe_A6.R")
#tired of recursive calls
flips=c(1,1,0)
prior=c(4,4)
finalPost = BernBeta(prior, flips)
print(finalPost)
#tired of recursive calls
flips=c(1,1,0)
prior=c(4,4)
BernBeta(prior, flips)
#tired of recursive calls
flips=c(1,1,0)
prior=c(4,4)
post = BernBeta(prior, flips)
rm(list=ls()) # clean up
library(knitr)
gr <- (1+sqrt(5))/2 # golden ratio, for figures
opts_chunk$set(comment="  ",
collapse=TRUE,
#echo=FALSE,
fig.asp=1/gr,
dev="png",
fig.align="center"
)
options(digits=3)
source("sourceMe_A6.R")
#added for colored text
colorize <- function(x, color) {
if (knitr::is_latex_output()) {
sprintf("\\textcolor{%s}{%s}", color, x)
} else if (knitr::is_html_output()) {
sprintf("<span style='color: %s;'>%s</span>", color,
x)
} else x
}
colorize("COMPLETE", "green")
?qbeta
#haldane prior
a = 0
b = 0
x = seq(0, 1, by=0.01)
q = qbeta(x, a, b)
hist(q, plot=TRUE)
#haldane prior
a = 0
b = 0
x = seq(0, 1, by=0.01)
q = dbeta(x, a, b)
hist(q, plot=TRUE)
#haldane prior
a = 0
b = 0
x = seq(0, 1, by=0.01)
q = pbeta(x, a, b)
hist(q, plot=TRUE)
#haldane prior
a = 0
b = 0
x = seq(0, 1, by=0.01)
q = rbeta(x, a, b)
hist(q, plot=TRUE)
#haldane prior
a = 0
b = 0
x = seq(0, 1, by=0.01)
q = qbeta(x, a, b)
plot(x, q, plot=TRUE)
#haldane prior
a = 0
b = 0
x = seq(0, 1, by=0.01)
q = qbeta(x, a, b)
plot(x, q, plot=TRUE)
?plot
#haldane prior
a = 0
b = 0
x = seq(0, 1, by=0.01)
q = qbeta(x, a, b)
plot(x, q)
#haldane prior
a = 0
b = 0
x = seq(0, 1, by=0.01)
q = qbeta(x, a, b)
plot(x, q, "b")
#haldane prior
a = 0
b = 0
x = seq(0, 1, by=0.01)
q = dbeta(x, a, b)
plot(x, q, "b")
#haldane prior
a = 0
b = 0
x = seq(0, 1, by=0.01)
q = pbeta(x, a, b)
plot(x, q, "b")
# frac of each option, first round
prefA1 = 58./100
prefB1 = 1.0 - prefA
# frac of each option, first round
prefA1 = 58./100
prefB1 = 1.0 - prefA1
Nsample1 = 100
a = b = 1
?qbeta
p = dbeta(x, 1, 1)
plot(x, p)
# frac of each option, first round
Nsample1 = 100
N_A1 = 58
N_B1 = 1 - prefA1
a1 = b1 = 1
a2 = a1 + N_A1
b2 = b1 + N_B1
x = seq(0,1, by=0.001)
prior = dbeta(x, a1, b1)
likelihood = dbeta(x, a2, b2)
plot(x, prior)
plot(x, likelihood)
# frac of each option, first round
Nsample1 = 100
N_A1 = 58
N_B1 = 1 - prefA1
a1 = b1 = 1
a2 = a1 + N_A1
b2 = b1 + N_B1
x = seq(0,1, by=0.001)
prior = dbeta(x, a1, b1)
likelihood = dbeta(x, a2, b2)
plot(x, prior)
plot(x, likelihood)
# frac of each option, first round
Nsample1 = 100
N_A1 = 58
N_B1 = 1 - prefA1
a1 = b1 = 1
a2 = a1 + N_A1
b2 = b1 + N_B1
x = seq(0,1, by=0.001)
prior = dbeta(x, a1, b1)
likelihood = dbeta(x, a2, b2)
post = prior * likelihood
plot(x, prior)
plot(x, likelihood)
# frac of each option, first round
Nsample1 = 100
N_A1 = 58
N_B1 = 1 - prefA1
a1 = b1 = 1
a2 = a1 + N_A1
b2 = b1 + N_B1
x = seq(0,1, by=0.001)
prior = dbeta(x, a1, b1)
likelihood = dbeta(x, a2, b2)
post = prior * likelihood
plot(x, prior)
plot(x, likelihood)
plot(x, post)
# frac of each option, first round
Nsample1 = 100
N_A1 = 58
N_B1 = Nsample1 - prefA1
a1 = b1 = 1
a2 = a1 + N_A1
b2 = b1 + N_B1
x = seq(0,1, by=0.001)
prior = dbeta(x, a1, b1)
likelihood = dbeta(x, a2, b2)
post = prior * likelihood
plot(x, prior)
plot(x, likelihood)
plot(x, post)
# frac of each option, first round
Nsample1 = 100
N_A1 = 58
N_B1 = Nsample1 - prefA1
a1 = b1 = 1
a2 = a1 + N_A1
b2 = b1 + N_B1
x = seq(0,1, by=0.001)
prior = dbeta(x, a1, b1)
likelihood = dbeta(x, a2, b2)
post = prior * likelihood
HDIvec = HDIofICDF(qbeta, shape1=a2, shape2=b2)
print(HDIvec)
# frac of each option, first round
Nsample1 = 100
N_A1 = 58
N_B1 = Nsample1 - prefA1
a1 = b1 = 1
a2 = a1 + N_A1
b2 = b1 + N_B1
x = seq(0,1, by=0.001)
prior = dbeta(x, a1, b1)
likelihood = dbeta(x, a2, b2)
post = prior * likelihood
HDIlow, HDIhigh = HDIofICDF(qbeta, shape1=a2, shape2=b2)
# frac of each option, first round
Nsample1 = 100
N_A1 = 58
N_B1 = Nsample1 - prefA1
a1 = b1 = 1
a2 = a1 + N_A1
b2 = b1 + N_B1
x = seq(0,1, by=0.001)
prior = dbeta(x, a1, b1)
likelihood = dbeta(x, a2, b2)
post = prior * likelihood
(HDIlow, HDIhigh) = HDIofICDF(qbeta, shape1=a2, shape2=b2)
# frac of each option, first round
Nsample1 = 100
N_A1 = 58
N_B1 = Nsample1 - prefA1
a1 = b1 = 1
a2 = a1 + N_A1
b2 = b1 + N_B1
x = seq(0,1, by=0.001)
prior = dbeta(x, a1, b1)
likelihood = dbeta(x, a2, b2)
post = prior * likelihood
HDIvec = HDIofICDF(qbeta, shape1=a2, shape2=b2)
# frac of each option, first round
Nsample1 = 100
N_A1 = 58
N_B1 = Nsample1 - N_A1
a1 = b1 = 1
a2 = a1 + N_A1
b2 = b1 + N_B1
x = seq(0,1, by=0.001)
prior1 = dbeta(x, a1, b1)
likelihood1 = dbeta(x, a2, b2)
post1 = prior * likelihood
HDIvec1 = HDIofICDF(qbeta, shape1=a2, shape2=b2)
# frac of each option, first round
Nsample1 = 100
N_A1 = 58
N_B1 = Nsample1 - N_A1
a1 = b1 = 1
a2 = a1 + N_A1
b2 = b1 + N_B1
x = seq(0,1, by=0.001)
prior1 = dbeta(x, a1, b1)
likelihood1 = dbeta(x, a2, b2)
post1 = prior1 * likelihood1
HDIvec1 = HDIofICDF(qbeta, shape1=a2, shape2=b2)
Nsample2 = 100
N_A2 = 57
N_B2 = Nsample2 - N_A2
a3 = 1 + N_A2
b3 = 1 + N_B2
x = seq(0, 1, by=0.001)
prior2 = dbeta(x, a2, b2)
likelhood2 = dbeta(x, a3, b3)
post2 = prior2 * likelihood2
Nsample2 = 100
N_A2 = 57
N_B2 = Nsample2 - N_A2
a3 = 1 + N_A2
b3 = 1 + N_B2
x = seq(0, 1, by=0.001)
prior2 = dbeta(x, a2, b2)
likelihood2 = dbeta(x, a3, b3)
post2 = prior2 * likelihood2
plot(x, post2)
# frac of each option, first round
Nsample1 = 100
N_A1 = 58
N_B1 = Nsample1 - N_A1
a1 = b1 = 1
a2 = a1 + N_A1
b2 = b1 + N_B1
x = seq(0,1, by=0.001)
prior1 = dbeta(x, a1, b1)
likelihood1 = dbeta(x, a2, b2)
post1 = prior1 * likelihood1
HDIvec1 = HDIofICDF(qbeta, shape1=a2, shape2=b2)
plot(x, post1)
# frac of each option, first round
Nsample1 = 100
N_A1 = 58
N_B1 = Nsample1 - N_A1
a1 = b1 = 1
a2 = a1 + N_A1
b2 = b1 + N_B1
x = seq(0,1, by=0.001)
prior1 = dbeta(x, a1, b1)
likelihood1 = dbeta(x, a2, b2)
post1 = prior1 * likelihood1
HDIvec1 = HDIofICDF(qbeta, shape1=a2, shape2=b2)
plot(x, post1)
abline(v=HDIvec1[1])
# frac of each option, first round
Nsample1 = 100
N_A1 = 58
N_B1 = Nsample1 - N_A1
a1 = b1 = 1
a2 = a1 + N_A1
b2 = b1 + N_B1
x = seq(0,1, by=0.001)
prior1 = dbeta(x, a1, b1)
likelihood1 = dbeta(x, a2, b2)
post1 = prior1 * likelihood1
HDIvec1 = HDIofICDF(qbeta, shape1=a2, shape2=b2)
plot(x, post1)
abline(v=HDIvec1)
Nsample2 = 100
N_A2 = 57
N_B2 = Nsample2 - N_A2
a3 = 1 + N_A2
b3 = 1 + N_B2
x = seq(0, 1, by=0.001)
prior2 = dbeta(x, a2, b2)
likelihood2 = dbeta(x, a3, b3)
post2 = prior2 * likelihood2
HDIvec2 = HDIofICDF(qbeta, shape1=a3, shape2=b3)
plot(x, post2)
abline(v=HDIvec2)
Nsample2 = 100
N_A2 = 57
N_B2 = Nsample2 - N_A2
a3 = 1 + N_A2
b3 = 1 + N_B2
x = seq(0, 1, by=0.001)
prior2 = dbeta(x, a2, b2)
likelihood2 = dbeta(x, a3, b3)
post2 = prior2 * likelihood2
HDIvec2 = HDIofICDF(qbeta, shape1=a3, shape2=b3)
plot(x, post2)
abline(v=HDIvec2)
Nsample2 = 100
N_A2 = 57
N_B2 = Nsample2 - N_A2
a3 = 1 + N_A2
b3 = 1 + N_B2
x = seq(0, 1, by=0.001)
prior2 = dbeta(x, a2, b2)
likelihood2 = dbeta(x, a3, b3)
post2 = prior2 * likelihood2
HDIvec2 = HDIofICDF(qbeta, shape1=a3, shape2=b3)
plot(x, post2)
abline(v=HDIvec2)
print(HDIvec2[2]-HDIvec2[1])
# frac of each option, first round
Nsample1 = 100
N_A1 = 58
N_B1 = Nsample1 - N_A1
a1 = b1 = 1
a2 = a1 + N_A1
b2 = b1 + N_B1
x = seq(0,1, by=0.001)
prior1 = dbeta(x, a1, b1)
likelihood1 = dbeta(x, a2, b2)
post1 = prior1 * likelihood1
HDIvec1 = HDIofICDF(qbeta, shape1=a2, shape2=b2)
plot(x, post1)
abline(v=HDIvec1)
print(HDIvec1[2]-HDIvec1[1])
Nsample2 = 100
N_A2 = 57
N_B2 = Nsample2 - N_A2
a3 = 1 + N_A2
b3 = 1 + N_B2
x = seq(0, 1, by=0.001)
prior2 = dbeta(x, a2, b2)
likelihood2 = dbeta(x, a3, b3)
post2 = prior2 * likelihood2
HDIvec2 = HDIofICDF(qbeta, shape1=a3, shape2=b3)
plot(x, post2)
abline(v=HDIvec2)
print(HDIvec2[2]-HDIvec2[1])
# frac of each option, first round
Nsample1 = 100
N_A1 = 58
N_B1 = Nsample1 - N_A1
a1 = b1 = 1
a2 = a1 + N_A1
b2 = b1 + N_B1
x = seq(0,1, by=0.001)
prior1 = dbeta(x, a1, b1)
likelihood1 = dbeta(x, a2, b2)
post1 = prior1 * likelihood1
HDIvec1 = HDIofICDF(qbeta, shape1=a2, shape2=b2)
plot(x, post1)
abline(v=HDIvec1)
x = seq(0, 1, by=0.001)
prior2 = dbeta(x, a2, b2)
likelihood2 = dbeta(x, a3, b3)
post2 = prior2 * likelihood2
HDIvec2 = HDIofICDF(qbeta, shape1=a3, shape2=b3)
plot(x, post2)
abline(v=HDIvec2)
